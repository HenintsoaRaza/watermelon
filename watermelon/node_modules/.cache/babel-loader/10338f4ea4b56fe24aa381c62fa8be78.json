{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\henin\\\\Desktop\\\\GitProjects\\\\watermelon\\\\watermelon\\\\src\\\\body\\\\account.js\";\nimport React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport userNotIn from './utility/userNotIn';\nimport loadUsers from './utility/loadUsers';\nimport user from '../objects/user.js';\nimport wallet from '../objects/wallet.js';\nimport Const from '../const.js';\nconst cste = new Const();\n\nclass account extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = event => {\n      const target = event.target;\n      const value = target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      var listUsers = loadUsers();\n\n      if (userNotIn(listUsers, this.state.email)) {\n        var idMax = 0;\n        listUsers.forEach(element => {\n          if (element.id >= idMax) {\n            idMax = element.id;\n          }\n        });\n        idMax++;\n        this.setState({\n          id: idMax\n        }, () => {\n          //New user\n          var u = new user();\n          u.copy(this.state);\n          u.saveUser(); //New wallet\n\n          var w = new wallet(this.state.id, 0);\n          w.saveWallet();\n        });\n        alert('Félicitations vous êtes inscrits !');\n      } else {\n        event.preventDefault();\n        event.stopPropagation();\n        alert('Cette adresse email est déjà prise !');\n      }\n    };\n\n    var pState = JSON.parse(localStorage.getItem(cste.keyPrevState));\n\n    var _u = new user();\n\n    _u.findUserById(pState.userId);\n\n    this.state = {\n      id: _u.id,\n      first_name: _u.first_name,\n      last_name: _u.last_name,\n      email: _u.email,\n      password: _u.password\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"rounded border container-fluid col-lg-4 col-md-8 col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      class: \"text-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \" Mon Compte \")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(Form\n    /*onSubmit={this.handleSubmit}*/\n    , {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formBasicfname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Pr\\xE9nom\"), React.createElement(Form.Control, {\n      required: true,\n      readOnly: true,\n      name: \"first_name\",\n      value: this.state.first_name,\n      onChange: this.handleInputChange,\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"formBasiclname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Nom\"), React.createElement(Form.Control, {\n      required: true,\n      readOnly: true,\n      name: \"last_name\",\n      value: this.state.last_name,\n      onChange: this.handleInputChange,\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Adresse email\"), React.createElement(Form.Control, {\n      required: true,\n      readOnly: true,\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.handleInputChange,\n      type: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Cette adresse email est d\\xE9j\\xE0 prise !\")), React.createElement(Form.Group, {\n      controlId: \"formBasicPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Mot de Passe\"), React.createElement(Form.Control, {\n      required: true,\n      readOnly: true,\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleInputChange,\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(Form.Group, {\n      controlId: \"formBasicButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"dark\",\n      size: \"lg\",\n      block: true,\n      onClick: alert('modify'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Modifier\"), React.createElement(Button, {\n      variant: \"primary\",\n      size: \"lg\",\n      block: true,\n      onClick: alert('save'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Enregistrer\")))));\n  }\n\n}\n\nexport default account;","map":{"version":3,"sources":["C:/Users/henin/Desktop/GitProjects/watermelon/watermelon/src/body/account.js"],"names":["React","Component","Form","Button","userNotIn","loadUsers","user","wallet","Const","cste","account","constructor","props","handleInputChange","event","target","value","name","setState","handleSubmit","listUsers","state","email","idMax","forEach","element","id","u","copy","saveUser","w","saveWallet","alert","preventDefault","stopPropagation","pState","JSON","parse","localStorage","getItem","keyPrevState","findUserById","userId","first_name","last_name","password","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport userNotIn from './utility/userNotIn';\r\nimport loadUsers from './utility/loadUsers';\r\nimport user from '../objects/user.js';\r\nimport wallet from '../objects/wallet.js';\r\nimport Const from '../const.js';\r\n\r\nconst cste = new Const();\r\n\r\nclass account extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        var pState = JSON.parse(localStorage.getItem(cste.keyPrevState));\r\n\r\n        var u = new user();\r\n        u.findUserById(pState.userId);\r\n\r\n        this.state = {\r\n            id: u.id,\r\n            first_name: u.first_name,\r\n            last_name: u.last_name,\r\n            email: u.email,\r\n            password: u.password,\r\n        };\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    /*\r\n        1. charger tous les users\r\n        2. vérifier que l'email n'est pas utilisé\r\n          2.1 email existant: message d'erreur\r\n          2.2 email non existant: création de compte\r\n        3. création de compte: attribution de l'id 'u'+(max+1)\r\n    */\r\n\r\n    handleSubmit = (event) => {\r\n        var listUsers = loadUsers();\r\n        if (userNotIn(listUsers, this.state.email)) {\r\n\r\n            var idMax = 0;\r\n\r\n            listUsers.forEach(element => {\r\n                if (element.id >= idMax) {\r\n                    idMax = element.id;\r\n                }\r\n            });\r\n            idMax++;\r\n\r\n            this.setState({ id: idMax }, () => {\r\n                //New user\r\n                var u = new user();\r\n                u.copy(this.state);\r\n                u.saveUser();\r\n\r\n                //New wallet\r\n                var w = new wallet(this.state.id, 0);\r\n                w.saveWallet();\r\n            });\r\n            alert('Félicitations vous êtes inscrits !');\r\n        } else {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            alert('Cette adresse email est déjà prise !');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n\r\n            <div>\r\n                <br /><br /><br /><br />\r\n                <div class=\"rounded border container-fluid col-lg-4 col-md-8 col-sm-10\" >\r\n                    <br /><br />\r\n                    <h1 align=\"center\"><a class=\"text-dark\"> Mon Compte </a></h1>\r\n                    <br /><br />\r\n                    <Form /*onSubmit={this.handleSubmit}*/>\r\n\r\n                        <Form.Group controlId=\"formBasicfname\">\r\n                            <Form.Label>Prénom</Form.Label>\r\n                            <Form.Control\r\n                                required readOnly name=\"first_name\"\r\n                                value={this.state.first_name}\r\n                                onChange={this.handleInputChange}\r\n                                type=\"text\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasiclname\">\r\n                            <Form.Label>Nom</Form.Label>\r\n                            <Form.Control\r\n                                required readOnly name=\"last_name\"\r\n                                value={this.state.last_name}\r\n                                onChange={this.handleInputChange}\r\n                                type=\"text\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Adresse email</Form.Label>\r\n                            <Form.Control\r\n                                required readOnly name=\"email\"\r\n                                value={this.state.email}\r\n                                onChange={this.handleInputChange}\r\n                                type=\"email\" />\r\n                            <Form.Control.Feedback type=\"invalid\">Cette adresse email est déjà prise !</Form.Control.Feedback>\r\n\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Mot de Passe</Form.Label>\r\n                            <Form.Control\r\n                                required readOnly name=\"password\"\r\n                                value={this.state.password}\r\n                                onChange={this.handleInputChange}\r\n                                type=\"password\" />\r\n                        </Form.Group>\r\n\r\n                        <br />\r\n                        <Form.Group controlId=\"formBasicButton\">\r\n                            <Button variant=\"dark\" size=\"lg\" block onClick={alert('modify')}>\r\n                                Modifier\r\n                            </Button>\r\n                            <Button variant=\"primary\" size=\"lg\" block onClick={alert('save')}>\r\n                                Enregistrer\r\n                            </Button>\r\n                        </Form.Group>\r\n\r\n\r\n\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default account;"]},"metadata":{},"sourceType":"module"}