{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar DEFAULT_FIELD_DELIMITER = ',';\nvar VALID_FIELD_DELIMITERS = [DEFAULT_FIELD_DELIMITER, ';'];\n\nvar FieldStringifier =\n/** @class */\nfunction () {\n  function FieldStringifier(fieldDelimiter) {\n    this._fieldDelimiter = fieldDelimiter;\n  }\n\n  Object.defineProperty(FieldStringifier.prototype, \"fieldDelimiter\", {\n    get: function () {\n      return this._fieldDelimiter;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  FieldStringifier.prototype.isEmpty = function (value) {\n    return typeof value === 'undefined' || value === null || value === '';\n  };\n\n  FieldStringifier.prototype.quoteField = function (field) {\n    return \"\\\"\" + field.replace(/\"/g, '\"\"') + \"\\\"\";\n  };\n\n  return FieldStringifier;\n}();\n\nexports.FieldStringifier = FieldStringifier;\n\nvar DefaultFieldStringifier =\n/** @class */\nfunction (_super) {\n  __extends(DefaultFieldStringifier, _super);\n\n  function DefaultFieldStringifier() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  DefaultFieldStringifier.prototype.stringify = function (value) {\n    if (this.isEmpty(value)) return '';\n    var str = String(value);\n    return this.needsQuote(str) ? this.quoteField(str) : str;\n  };\n\n  DefaultFieldStringifier.prototype.needsQuote = function (str) {\n    return str.includes(this.fieldDelimiter) || str.includes('\\n') || str.includes('\"');\n  };\n\n  return DefaultFieldStringifier;\n}(FieldStringifier);\n\nvar ForceQuoteFieldStringifier =\n/** @class */\nfunction (_super) {\n  __extends(ForceQuoteFieldStringifier, _super);\n\n  function ForceQuoteFieldStringifier() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ForceQuoteFieldStringifier.prototype.stringify = function (value) {\n    return this.isEmpty(value) ? '' : this.quoteField(String(value));\n  };\n\n  return ForceQuoteFieldStringifier;\n}(FieldStringifier);\n\nfunction createFieldStringifier(fieldDelimiter, alwaysQuote) {\n  if (fieldDelimiter === void 0) {\n    fieldDelimiter = DEFAULT_FIELD_DELIMITER;\n  }\n\n  if (alwaysQuote === void 0) {\n    alwaysQuote = false;\n  }\n\n  _validateFieldDelimiter(fieldDelimiter);\n\n  return alwaysQuote ? new ForceQuoteFieldStringifier(fieldDelimiter) : new DefaultFieldStringifier(fieldDelimiter);\n}\n\nexports.createFieldStringifier = createFieldStringifier;\n\nfunction _validateFieldDelimiter(delimiter) {\n  if (VALID_FIELD_DELIMITERS.indexOf(delimiter) === -1) {\n    throw new Error(\"Invalid field delimiter `\" + delimiter + \"` is specified\");\n  }\n}","map":null,"metadata":{},"sourceType":"script"}