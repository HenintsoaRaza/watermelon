{"ast":null,"code":"class Transfer {\n  constructor(id, debited_wallet_id, credited_wallet_id, amount) {\n    this.load = () => {\n      var listTransfer = [];\n\n      for (let i = 0; i < localStorage.length; i++) {\n        var key = localStorage.key(i);\n\n        if (key.charAt(0) == 't') {\n          var t = new Transfer();\n          t.copy(JSON.parse(localStorage.getItem(key)));\n          listTransfer.push(t);\n        }\n      }\n\n      alert(JSON.stringify(listTransfer));\n      return listTransfer;\n    };\n\n    this.getTransfersByWallet_id = wallet_id => {\n      var listTransfer = this.load();\n      var tab = [];\n\n      for (let i = 0; i < listTransfer.length; i++) {\n        if (listTransfer[i].debited_wallet_id == wallet_id || listTransfer[i].credited_wallet_i == wallet_id) {\n          tab.push(listTransfer[i]);\n        }\n      }\n\n      return tab;\n    };\n\n    this.getNewId = () => {\n      if (this.load().length == 0) {\n        return 1;\n      } else {\n        const listTransfers = this.load();\n        alert(JSON.stringify(listTransfers));\n        var max = 0;\n\n        for (let i = 0; i < listTransfers.length; i++) {\n          if (listTransfers[i].id > max) {\n            max = listTransfers[i].id;\n          }\n        }\n\n        max += 1;\n        return max;\n      }\n    };\n\n    this.copy = obj => {\n      this.id = obj.id;\n      this.debited_wallet_id = obj.debited_wallet_id;\n      this.credited_wallet_id = obj.credited_wallet_id;\n      this.amount = obj.amount;\n    };\n\n    this.save = () => {\n      var key = 't'.concat(this.id);\n      var obj = JSON.stringify(this);\n      localStorage.setItem(key, obj);\n    };\n\n    this.balanceTransfers = wallet_id => {\n      var listTransfers = this.getTransfersByWallet_id(wallet_id);\n      var pos = 0;\n      var neg = 0;\n\n      for (let i = 0; i < listTransfers.length; i++) {\n        if (listTransfers[i].credited_wallet_id == wallet_id) {\n          pos = pos + listTransfers[i].amount;\n        } else {\n          neg = neg + listTransfers[i].amount;\n        }\n      }\n\n      var balance = pos - neg;\n      return balance;\n    };\n\n    this.id = id;\n    this.debited_wallet_id = debited_wallet_id;\n    this.credited_wallet_id = credited_wallet_id;\n    this.amount = amount;\n  }\n\n}\n\nexport default Transfer;","map":{"version":3,"sources":["C:/Users/henin/Desktop/GitProjects/watermelon/watermelon/src/objects/transfer.js"],"names":["Transfer","constructor","id","debited_wallet_id","credited_wallet_id","amount","load","listTransfer","i","localStorage","length","key","charAt","t","copy","JSON","parse","getItem","push","alert","stringify","getTransfersByWallet_id","wallet_id","tab","credited_wallet_i","getNewId","listTransfers","max","obj","save","concat","setItem","balanceTransfers","pos","neg","balance"],"mappings":"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","sourcesContent":["class Transfer {\r\n    constructor(id, debited_wallet_id, credited_wallet_id, amount) {\r\n        this.id = id;\r\n        this.debited_wallet_id = debited_wallet_id;\r\n        this.credited_wallet_id = credited_wallet_id;\r\n        this.amount = amount;\r\n    }\r\n\r\n    load = () => {\r\n        var listTransfer = [];\r\n\r\n        for (let i = 0; i < localStorage.length; i++) {\r\n            var key = localStorage.key(i);\r\n            if (key.charAt(0) == 't') {\r\n                var t = new Transfer();\r\n                t.copy(JSON.parse(localStorage.getItem(key)));\r\n                listTransfer.push(t);\r\n            }\r\n        }\r\n\r\n        alert(JSON.stringify(listTransfer));\r\n\r\n        return listTransfer;\r\n    }\r\n\r\n    getTransfersByWallet_id = (wallet_id) => {\r\n        var listTransfer = this.load();\r\n        var tab = [];\r\n\r\n        for (let i = 0; i < listTransfer.length; i++) {\r\n            if (listTransfer[i].debited_wallet_id == wallet_id || listTransfer[i].credited_wallet_i == wallet_id) {\r\n                tab.push(listTransfer[i]);\r\n            }\r\n        }\r\n\r\n        return tab;\r\n    }\r\n\r\n    getNewId = () => {\r\n        if (this.load().length == 0) {\r\n            return 1;\r\n        } else {\r\n            const listTransfers = this.load();\r\n            alert(JSON.stringify(listTransfers));\r\n\r\n            var max = 0;\r\n            for (let i = 0; i < listTransfers.length; i++) {\r\n                if (listTransfers[i].id > max) {\r\n                    max = listTransfers[i].id;\r\n                }\r\n            }\r\n            max += 1;\r\n\r\n            return max;\r\n        }\r\n    }\r\n\r\n    copy = (obj) => {\r\n        this.id = obj.id;\r\n        this.debited_wallet_id = obj.debited_wallet_id;\r\n        this.credited_wallet_id = obj.credited_wallet_id;\r\n        this.amount = obj.amount;\r\n    }\r\n\r\n    save = () => {\r\n        var key = 't'.concat(this.id);\r\n        var obj = JSON.stringify(this);\r\n        localStorage.setItem(key, obj);\r\n    }\r\n\r\n    balanceTransfers = (wallet_id) => {\r\n        var listTransfers = this.getTransfersByWallet_id(wallet_id);\r\n        var pos = 0;\r\n        var neg = 0;\r\n\r\n        for(let i = 0; i < listTransfers.length; i++){\r\n            if(listTransfers[i].credited_wallet_id == wallet_id ){\r\n                pos = pos + listTransfers[i].amount;\r\n            } else {\r\n                neg = neg + listTransfers[i].amount;\r\n            }\r\n        }\r\n\r\n        var balance = pos - neg;\r\n\r\n        return balance;\r\n    }\r\n\r\n}\r\nexport default Transfer;"]},"metadata":{},"sourceType":"module"}