{"ast":null,"code":"import Transfer from './transfer.js';\nimport Payin from './payin.js';\nimport Payout from './payout.js';\nimport User from './user.js';\n\nclass Wallet {\n  constructor(_id, _balance) {\n    this.saveWallet = () => {\n      //save the user in the localstorage\n      var key = 'w'.concat(this.id);\n      var obj = JSON.stringify(this);\n      localStorage.setItem(key, obj);\n    };\n\n    this.copy = obj => {\n      this.id = obj.id;\n      this.balance = obj.balance;\n    };\n\n    this.loadWallets = () => {\n      var listWallets = [];\n\n      for (let i = 0; i < localStorage.length; i++) {\n        var key = localStorage.key(i);\n\n        if (key.charAt(0) == 'w') {\n          var w = new Wallet();\n          w.copy(JSON.parse(localStorage.getItem(key)));\n          listWallets.push(w);\n        }\n      }\n\n      return listWallets;\n    };\n\n    this.exist = id => {\n      var key = 'w'.concat(id);\n\n      if (localStorage.getItem(key) == null) {\n        return false;\n      } else {\n        return true;\n      }\n    };\n\n    this.getBalanceById = id => {\n      var key = 'w'.concat(id);\n      var w = new Wallet();\n\n      if (w.exist(id)) {\n        w.copy(JSON.parse(localStorage.getItem(key)));\n        return w.balance;\n      } else return null;\n    };\n\n    this.calculBalance = wallet_id => {\n      var pi = new Payin();\n      var po = new Payout();\n      var tr = new Transfer();\n      var payins = pi.totalPayins(wallet_id);\n      var payouts = po.totalPayouts(wallet_id);\n      var transfers = tr.balanceTransfers(wallet_id);\n      var balance = payins - payouts + transfers;\n      this.wallet_id = wallet_id;\n      this.balance = balance;\n      this.saveWallet();\n      return balance;\n    };\n\n    this.getEmail = wallet_id => {\n      var u = new User();\n      u.findUserById(wallet_id);\n      return u.email;\n    };\n\n    this.id = _id;\n    this.balance = _balance;\n  }\n\n}\n\nexport default Wallet;","map":{"version":3,"sources":["C:/Users/henin/Desktop/GitProjects/watermelon/watermelon/src/objects/wallet.js"],"names":["Transfer","Payin","Payout","User","Wallet","constructor","id","balance","saveWallet","key","concat","obj","JSON","stringify","localStorage","setItem","copy","loadWallets","listWallets","i","length","charAt","w","parse","getItem","push","exist","getBalanceById","calculBalance","wallet_id","pi","po","tr","payins","totalPayins","payouts","totalPayouts","transfers","balanceTransfers","getEmail","u","findUserById","email"],"mappings":"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","sourcesContent":["import Transfer from './transfer.js';\r\nimport Payin from './payin.js';\r\nimport Payout from './payout.js';\r\nimport User from './user.js';\r\n\r\nclass Wallet {\r\n    constructor(id, balance) {\r\n        this.id = id;\r\n        this.balance = balance;\r\n    }\r\n\r\n    saveWallet = () => {\r\n        //save the user in the localstorage\r\n        var key = 'w'.concat(this.id);\r\n        var obj = JSON.stringify(this);\r\n        localStorage.setItem(key, obj);\r\n    }\r\n\r\n    copy = (obj) => {\r\n        this.id = obj.id;\r\n        this.balance = obj.balance;\r\n    }\r\n\r\n    loadWallets = () => {\r\n        var listWallets = [];\r\n\r\n        for (let i = 0; i < localStorage.length; i++) {\r\n            var key = localStorage.key(i);\r\n            if (key.charAt(0) == 'w') {\r\n                var w = new Wallet();\r\n                w.copy(JSON.parse(localStorage.getItem(key)));\r\n                listWallets.push(w);\r\n            }\r\n        }\r\n\r\n        return listWallets;\r\n    }\r\n\r\n    exist = (id) => {\r\n        var key = 'w'.concat(id);\r\n\r\n        if (localStorage.getItem(key) == null) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    getBalanceById = (id) => {\r\n        var key = 'w'.concat(id);\r\n        var w = new Wallet();\r\n\r\n        if (w.exist(id)) {\r\n            w.copy(JSON.parse(localStorage.getItem(key)));\r\n            return w.balance;\r\n        } else return null;\r\n    }\r\n\r\n    calculBalance = (wallet_id) => {\r\n        var pi = new Payin();\r\n        var po = new Payout();\r\n        var tr = new Transfer();\r\n\r\n        var payins = pi.totalPayins(wallet_id);\r\n        var payouts = po.totalPayouts(wallet_id);\r\n        var transfers = tr.balanceTransfers(wallet_id);\r\n\r\n        var balance = payins - payouts + transfers;\r\n\r\n        this.wallet_id = wallet_id;\r\n        this.balance = balance;\r\n\r\n        this.saveWallet();\r\n\r\n        return balance;\r\n    }\r\n\r\n    getEmail = (wallet_id) => {\r\n        var u = new User();\r\n        u.findUserById(wallet_id);\r\n\r\n        return u.email;\r\n    }\r\n\r\n}\r\nexport default Wallet;"]},"metadata":{},"sourceType":"module"}