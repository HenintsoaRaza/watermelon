{"ast":null,"code":"class Transfer {\n  constructor(id, debited_wallet_id, credited_wallet_id, amount) {\n    this.load = () => {\n      var listTransfer = [];\n\n      for (let i = 0; i < localStorage.length; i++) {\n        var key = localStorage.key(i);\n\n        if (key.charAt(0) == 't') {\n          var t = new Transfer();\n          t.copy(JSON.parse(localStorage.getItem(key)));\n          listTransfer.push(t);\n        }\n      }\n\n      return listTransfer;\n    };\n\n    this.getTransfersByWallet_id = wallet_id => {\n      var listTransfer = this.load();\n\n      for (let i = 0; i < listTransfer.length; i++) {\n        if (listTransfer[i].debited_wallet_id !== wallet_id && listTransfer[i].credited_wallet_i !== wallet_id) {\n          listTransfer.splice(i, 1);\n        }\n      }\n\n      return listTransfer;\n    };\n\n    this.getNewId = () => {\n      if (this.load().length == 0) {\n        return 1;\n      } else {\n        const listTransfers = this.load();\n        var max = 0;\n\n        for (let i = 0; i < listTransfers.length; i++) {\n          if (listTransfers[i].id > max) {\n            max = listTransfers[i].id;\n          }\n        }\n\n        max += 1;\n        return max;\n      }\n    };\n\n    this.copy = obj => {\n      this.debited_wallet_id = obj.debited_wallet_id;\n      this.credited_wallet_id = obj.credited_wallet_id;\n      this.amount = obj.amount;\n    };\n\n    this.invert = () => {\n      this.id = this.id + 1;\n      var temp = this.debited_wallet_id;\n      this.debited_wallet_id = this.credited_wallet_id;\n      this.credited_wallet_id = temp;\n    };\n\n    this.save = () => {\n      var key = 't'.concat(this.id);\n      var obj = JSON.stringify(this);\n      localStorage.setItem(key, obj);\n      obj.invert();\n      var key = 't'.concat(this.id);\n      var obj = JSON.stringify(this);\n      localStorage.setItem(key, obj);\n    };\n\n    this.id = id;\n    this.debited_wallet_id = debited_wallet_id;\n    this.credited_wallet_id = credited_wallet_id;\n    this.amount = amount;\n  }\n\n}\n\nexport default Transfer;","map":{"version":3,"sources":["C:/Users/henin/Desktop/GitProjects/watermelon/watermelon/src/objects/transfer.js"],"names":["Transfer","constructor","id","debited_wallet_id","credited_wallet_id","amount","load","listTransfer","i","localStorage","length","key","charAt","t","copy","JSON","parse","getItem","push","getTransfersByWallet_id","wallet_id","credited_wallet_i","splice","getNewId","listTransfers","max","obj","invert","temp","save","concat","stringify","setItem"],"mappings":"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","sourcesContent":["class Transfer {\r\n    constructor(id, debited_wallet_id, credited_wallet_id, amount) {\r\n        this.id = id;\r\n        this.debited_wallet_id = debited_wallet_id;\r\n        this.credited_wallet_id = credited_wallet_id;\r\n        this.amount = amount;\r\n    }\r\n\r\n    load = () => {\r\n        var listTransfer = [];\r\n\r\n        for (let i = 0; i < localStorage.length; i++) {\r\n            var key = localStorage.key(i);\r\n            if (key.charAt(0) == 't') {\r\n                var t = new Transfer();\r\n                t.copy(JSON.parse(localStorage.getItem(key)));\r\n                listTransfer.push(t);\r\n            }\r\n        }\r\n\r\n        return listTransfer;\r\n    }\r\n\r\n    getTransfersByWallet_id = (wallet_id) => {\r\n        var listTransfer = this.load();\r\n\r\n        for (let i = 0; i < listTransfer.length; i++) {\r\n            if (listTransfer[i].debited_wallet_id !== wallet_id && listTransfer[i].credited_wallet_i !== wallet_id) {\r\n                listTransfer.splice(i, 1);\r\n            }\r\n        }\r\n\r\n        return listTransfer;\r\n    }\r\n\r\n    getNewId = () => {\r\n        if (this.load().length == 0) {\r\n            return 1;\r\n        } else {\r\n            const listTransfers = this.load();\r\n            var max = 0;\r\n            for (let i = 0; i < listTransfers.length; i++) {\r\n                if (listTransfers[i].id > max) {\r\n                    max = listTransfers[i].id;\r\n                }\r\n            }\r\n            max += 1;\r\n            return max;\r\n        }\r\n    }\r\n\r\n    copy = (obj) => {\r\n        this.debited_wallet_id = obj.debited_wallet_id;\r\n        this.credited_wallet_id = obj.credited_wallet_id;\r\n        this.amount = obj.amount;\r\n    }\r\n\r\n    invert = () => {\r\n        this.id=this.id + 1;\r\n        var temp = this.debited_wallet_id;\r\n        this.debited_wallet_id=this.credited_wallet_id;\r\n        this.credited_wallet_id = temp;\r\n\r\n    }\r\n\r\n    save = () => {\r\n        var key = 't'.concat(this.id);\r\n        var obj = JSON.stringify(this);\r\n        localStorage.setItem(key, obj);\r\n\r\n        obj.invert();\r\n        var key = 't'.concat(this.id);\r\n        var obj = JSON.stringify(this);\r\n        localStorage.setItem(key, obj);\r\n    }\r\n\r\n}\r\nexport default Transfer;"]},"metadata":{},"sourceType":"module"}