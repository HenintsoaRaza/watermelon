{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\henin\\\\Desktop\\\\GitProjects\\\\watermelon\\\\watermelon\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\henin\\\\Desktop\\\\GitProjects\\\\watermelon\\\\watermelon\\\\src\\\\body\\\\account.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Const from '../const.js';\nimport User from '../objects/user.js';\nconst cste = new Const();\n\nclass account extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = event => {\n      const target = event.target;\n      const value = target.value;\n      const name = target.name;\n      this.setState(prevState => {\n        let user = _objectSpread({}, prevState.user);\n\n        user[name] = value;\n        return {\n          user\n        };\n      });\n    };\n\n    this.modify = () => {\n      this.setState({\n        readOnly: !this.state.readOnly\n      });\n    };\n\n    this.save = () => {\n      var u = new User();\n\n      if (u.existEmail(this.state.user.email)) {\n        // (1) Si l'email existe bien\n        var id = u.existEmail(this.state.user.email);\n\n        if (id == this.state.user.id) {\n          // (1)-(A) Si c'est le même id (même compte)\n          u.copy(this.state.user);\n          u.saveUser();\n          alert('Les modifications ont été enregistrées');\n        } else {\n          // (1)-(B) Si l'email appartient à un autre compte\n          alert('Cette addresse email possède déjà un compte');\n        }\n      } else {\n        //(2) Si l'email n'existe pas \n        u.copy(this.state.user);\n        u.saveUser();\n        alert('Les modifications ont été enregistrées');\n      }\n    };\n\n    var pState = JSON.parse(localStorage.getItem(cste.keyPrevState));\n\n    var _u = new User();\n\n    _u.findUserById(pState.userId);\n\n    this.state = {\n      user: {\n        id: _u.id,\n        first_name: _u.first_name,\n        last_name: _u.last_name,\n        email: _u.email,\n        password: _u.password\n      },\n      readOnly: true\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"bg-light rounded border container-fluid col-lg-4 col-md-8 col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      class: \"text-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \" Mon Compte \")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formBasicfname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Pr\\xE9nom\"), React.createElement(Form.Control, {\n      required: true,\n      readOnly: this.state.readOnly,\n      name: \"first_name\",\n      value: this.state.user.first_name,\n      onChange: this.handleInputChange,\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"formBasiclname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Nom\"), React.createElement(Form.Control, {\n      required: true,\n      readOnly: this.state.readOnly,\n      name: \"last_name\",\n      value: this.state.user.last_name,\n      onChange: this.handleInputChange,\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Adresse email\"), React.createElement(Form.Control, {\n      required: true,\n      readOnly: this.state.readOnly,\n      name: \"email\",\n      value: this.state.user.email,\n      onChange: this.handleInputChange,\n      type: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Cette adresse email est d\\xE9j\\xE0 prise !\")), React.createElement(Form.Group, {\n      controlId: \"formBasicPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Mot de Passe\"), React.createElement(Form.Control, {\n      required: true,\n      readOnly: this.state.readOnly,\n      name: \"password\",\n      value: this.state.user.password,\n      onChange: this.handleInputChange,\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(Form.Group, {\n      controlId: \"formBasicButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"dark\",\n      size: \"lg\",\n      block: true,\n      onClick: this.modify,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Modifier\"), React.createElement(Button, {\n      variant: \"primary\",\n      size: \"lg\",\n      block: true,\n      onClick: this.save,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Enregistrer\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default account;","map":{"version":3,"sources":["C:/Users/henin/Desktop/GitProjects/watermelon/watermelon/src/body/account.js"],"names":["React","Component","Form","Button","Const","User","cste","account","constructor","props","handleInputChange","event","target","value","name","setState","prevState","user","modify","readOnly","state","save","u","existEmail","email","id","copy","saveUser","alert","pState","JSON","parse","localStorage","getItem","keyPrevState","findUserById","userId","first_name","last_name","password","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Const from '../const.js';\r\nimport User from '../objects/user.js';\r\n\r\nconst cste = new Const();\r\n\r\nclass account extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        var pState = JSON.parse(localStorage.getItem(cste.keyPrevState));\r\n\r\n        var u = new User();\r\n        u.findUserById(pState.userId);\r\n\r\n        this.state = {\r\n            user: {\r\n                id: u.id,\r\n                first_name: u.first_name,\r\n                last_name: u.last_name,\r\n                email: u.email,\r\n                password: u.password,\r\n            },\r\n            readOnly: true,\r\n        };\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState(prevState => {\r\n            let user = { ...prevState.user };\r\n            user[name] = value;\r\n            return { user };\r\n        });\r\n    }\r\n\r\n    modify = () => {\r\n        this.setState({ readOnly: !this.state.readOnly });\r\n    }\r\n\r\n    save = () => {\r\n        var u = new User();\r\n        if (u.existEmail(this.state.user.email)) { // (1) Si l'email existe bien\r\n            var id = u.existEmail(this.state.user.email);\r\n\r\n            if (id == this.state.user.id) { // (1)-(A) Si c'est le même id (même compte)\r\n                u.copy(this.state.user);\r\n                u.saveUser();\r\n                alert('Les modifications ont été enregistrées');\r\n\r\n            } else { // (1)-(B) Si l'email appartient à un autre compte\r\n                alert('Cette addresse email possède déjà un compte');\r\n            }\r\n\r\n        } else { //(2) Si l'email n'existe pas \r\n            u.copy(this.state.user);\r\n            u.saveUser();\r\n            alert('Les modifications ont été enregistrées');\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n\r\n            <div>\r\n                <br /><br /><br /><br />\r\n                <div class=\"bg-light rounded border container-fluid col-lg-4 col-md-8 col-sm-10\" >\r\n                    <br /><br />\r\n                    <h1 align=\"center\"><a class=\"text-dark\"> Mon Compte </a></h1>\r\n                    <br /><br />\r\n                    <Form >\r\n\r\n                        <Form.Group controlId=\"formBasicfname\">\r\n                            <Form.Label>Prénom</Form.Label>\r\n                            <Form.Control\r\n                                required readOnly={this.state.readOnly} name=\"first_name\"\r\n                                value={this.state.user.first_name}\r\n                                onChange={this.handleInputChange}\r\n                                type=\"text\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasiclname\">\r\n                            <Form.Label>Nom</Form.Label>\r\n                            <Form.Control\r\n                                required readOnly={this.state.readOnly} name=\"last_name\"\r\n                                value={this.state.user.last_name}\r\n                                onChange={this.handleInputChange}\r\n                                type=\"text\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Adresse email</Form.Label>\r\n                            <Form.Control\r\n                                required readOnly={this.state.readOnly} name=\"email\"\r\n                                value={this.state.user.email}\r\n                                onChange={this.handleInputChange}\r\n                                type=\"email\" />\r\n                            <Form.Control.Feedback type=\"invalid\">Cette adresse email est déjà prise !</Form.Control.Feedback>\r\n\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Mot de Passe</Form.Label>\r\n                            <Form.Control\r\n                                required readOnly={this.state.readOnly} name=\"password\"\r\n                                value={this.state.user.password}\r\n                                onChange={this.handleInputChange}\r\n                                type=\"password\" />\r\n                        </Form.Group>\r\n\r\n                        <br /><br />\r\n                        <Form.Group controlId=\"formBasicButton\">\r\n                            <Button variant=\"dark\" size=\"lg\" block onClick={this.modify}>\r\n                                Modifier\r\n                            </Button>\r\n                            <Button variant=\"primary\" size=\"lg\" block onClick={this.save}>\r\n                                Enregistrer\r\n                            </Button>\r\n                        </Form.Group>\r\n\r\n                        <br /><br />\r\n\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default account;"]},"metadata":{},"sourceType":"module"}