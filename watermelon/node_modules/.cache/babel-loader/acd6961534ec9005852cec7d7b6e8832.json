{"ast":null,"code":"class Transfer {\n  constructor(id, debited_wallet_id, credited_wallet_id, amount) {\n    this.load = () => {\n      var listTransfer = [];\n\n      for (let i = 0; i < localStorage.length; i++) {\n        var key = localStorage.key(i);\n\n        if (key.charAt(0) == 't') {\n          var t = new Transfer();\n          t.copy(JSON.parse(localStorage.getItem(key)));\n          listTransfer.push(t);\n        }\n      }\n\n      return listTransfer;\n    };\n\n    this.getTransfersByWallet_id = wallet_id => {\n      var listTransfer = this.load();\n      var tab = [];\n\n      for (let i = 0; i < listTransfer.length; i++) {\n        if (listTransfer[i].debited_wallet_id == wallet_id || listTransfer[i].credited_wallet_id == wallet_id) {\n          tab.push(listTransfer[i]);\n        }\n      }\n\n      return tab;\n    };\n\n    this.getNewId = () => {\n      if (this.load().length == 0) {\n        return 1;\n      } else {\n        const listTransfers = this.load();\n        var max = 0;\n\n        for (let i = 0; i < listTransfers.length; i++) {\n          if (listTransfers[i].id > max) {\n            max = listTransfers[i].id;\n          }\n        }\n\n        max += 1;\n        return max;\n      }\n    };\n\n    this.copy = obj => {\n      this.id = obj.id;\n      this.debited_wallet_id = obj.debited_wallet_id;\n      this.credited_wallet_id = obj.credited_wallet_id;\n      this.amount = obj.amount;\n    };\n\n    this.copy2 = obj => {\n      this.debited_wallet_id = obj.debited_wallet_id;\n      this.credited_wallet_id = obj.credited_wallet_id;\n      this.amount = obj.amount;\n    };\n\n    this.save = () => {\n      var key = 't'.concat(this.id);\n      var obj = JSON.stringify(this);\n      localStorage.setItem(key, obj);\n    };\n\n    this.balanceTransfers = wallet_id => {\n      var listTransfers = this.getTransfersByWallet_id(wallet_id);\n      var pos = 0;\n      var neg = 0;\n\n      for (let i = 0; i < listTransfers.length; i++) {\n        if (listTransfers[i].credited_wallet_id == wallet_id) {\n          pos = pos + listTransfers[i].amount;\n        } else {\n          neg = neg + listTransfers[i].amount;\n        }\n      }\n\n      var balance = pos - neg;\n      return balance;\n    };\n\n    this.id = id;\n    this.debited_wallet_id = debited_wallet_id;\n    this.credited_wallet_id = credited_wallet_id;\n    this.amount = amount;\n  }\n\n}\n\nexport default Transfer;","map":{"version":3,"sources":["C:/Users/henin/Desktop/GitProjects/watermelon/watermelon/src/objects/transfer.js"],"names":["Transfer","constructor","id","debited_wallet_id","credited_wallet_id","amount","load","listTransfer","i","localStorage","length","key","charAt","t","copy","JSON","parse","getItem","push","getTransfersByWallet_id","wallet_id","tab","getNewId","listTransfers","max","obj","copy2","save","concat","stringify","setItem","balanceTransfers","pos","neg","balance"],"mappings":"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","sourcesContent":["class Transfer {\r\n    constructor(id, debited_wallet_id, credited_wallet_id, amount) {\r\n        this.id = id;\r\n        this.debited_wallet_id = debited_wallet_id;\r\n        this.credited_wallet_id = credited_wallet_id;\r\n        this.amount = amount;\r\n    }\r\n\r\n    load = () => {\r\n        var listTransfer = [];\r\n\r\n        for (let i = 0; i < localStorage.length; i++) {\r\n            var key = localStorage.key(i);\r\n            if (key.charAt(0) == 't') {\r\n                var t = new Transfer();\r\n                t.copy(JSON.parse(localStorage.getItem(key)));\r\n                listTransfer.push(t);\r\n            }\r\n        }\r\n\r\n        return listTransfer;\r\n    }\r\n\r\n    getTransfersByWallet_id = (wallet_id) => {\r\n        var listTransfer = this.load();\r\n        var tab = [];\r\n\r\n        for (let i = 0; i < listTransfer.length; i++) {\r\n            if (listTransfer[i].debited_wallet_id == wallet_id || listTransfer[i].credited_wallet_id == wallet_id) {\r\n                tab.push(listTransfer[i]);\r\n            }\r\n        }\r\n\r\n        return tab;\r\n    }\r\n\r\n    getNewId = () => {\r\n        if (this.load().length == 0) {\r\n            return 1;\r\n        } else {\r\n            const listTransfers = this.load();\r\n\r\n            var max = 0;\r\n            for (let i = 0; i < listTransfers.length; i++) {\r\n                if (listTransfers[i].id > max) {\r\n                    max = listTransfers[i].id;\r\n                }\r\n            }\r\n            max += 1;\r\n\r\n            return max;\r\n        }\r\n    }\r\n\r\n    copy = (obj) => {\r\n        this.id = obj.id;\r\n        this.debited_wallet_id = obj.debited_wallet_id;\r\n        this.credited_wallet_id = obj.credited_wallet_id;\r\n        this.amount = obj.amount;\r\n    }\r\n\r\n    copy2 = (obj) => {\r\n        this.debited_wallet_id = obj.debited_wallet_id;\r\n        this.credited_wallet_id = obj.credited_wallet_id;\r\n        this.amount = obj.amount;\r\n    }\r\n\r\n    save = () => {\r\n        var key = 't'.concat(this.id);\r\n        var obj = JSON.stringify(this);\r\n        localStorage.setItem(key, obj);\r\n    }\r\n\r\n    balanceTransfers = (wallet_id) => {\r\n        var listTransfers = this.getTransfersByWallet_id(wallet_id);\r\n        var pos = 0;\r\n        var neg = 0;\r\n\r\n        for (let i = 0; i < listTransfers.length; i++) {\r\n            if (listTransfers[i].credited_wallet_id == wallet_id) {\r\n                pos = pos + listTransfers[i].amount;\r\n            } else {\r\n                neg = neg + listTransfers[i].amount;\r\n            }\r\n        }\r\n\r\n        var balance = pos - neg;\r\n\r\n        return balance;\r\n    }\r\n\r\n}\r\nexport default Transfer;"]},"metadata":{},"sourceType":"module"}