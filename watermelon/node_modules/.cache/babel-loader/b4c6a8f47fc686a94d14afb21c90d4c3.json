{"ast":null,"code":"class Payin {\n  constructor(id, _wallet_id, amount) {\n    this.loadPayins = () => {\n      var listPayins = [];\n\n      for (let i = 0; i < localStorage.length; i++) {\n        var key = localStorage.key(i);\n\n        if (key.charAt(0) == 'i') {\n          var pi = new Payin();\n          pi.copy(JSON.parse(localStorage.getItem(key)));\n          listPayins.push(pi);\n        }\n      }\n\n      return listPayins;\n    };\n\n    this.getNewId = () => {\n      if (this.loadPayins().length == 0) {\n        return 1;\n      } else {\n        const listPayins = this.loadPayins();\n        var max = 0;\n\n        for (let i = 0; i < listPayins.length; i++) {\n          if (listPayins[i].id > max) {\n            max = listPayins[i].id;\n          }\n        }\n\n        max = max + 1;\n        return max;\n      }\n    };\n\n    this.copy = obj => {\n      this.wallet_id = obj.wallet_id;\n      this.amount = obj.amount * 100;\n    };\n\n    this.save = () => {\n      var key = 'i'.concat(this.id);\n      var obj = JSON.stringify(this);\n      localStorage.setItem(key, obj);\n    };\n\n    this.getPayinsByWallet_id = wallet_id => {\n      var listPayins = this.loadPayins();\n\n      for (let i = 0; i < listPayins.length; i++) {\n        if (listPayins[i].wallet_id !== wallet_id) {\n          listPayins.splice(i, 1);\n        }\n      }\n\n      return listPayins;\n    };\n\n    this.id = id;\n    this.wallet_id = _wallet_id;\n    this.amount = amount;\n  }\n\n}\n\nexport default Payin;","map":{"version":3,"sources":["C:/Users/henin/Desktop/GitProjects/watermelon/watermelon/src/objects/payin.js"],"names":["Payin","constructor","id","wallet_id","amount","loadPayins","listPayins","i","localStorage","length","key","charAt","pi","copy","JSON","parse","getItem","push","getNewId","max","obj","save","concat","stringify","setItem","getPayinsByWallet_id","splice"],"mappings":"AAAA,MAAMA,KAAN,CAAY;AACRC,EAAAA,WAAW,CAACC,EAAD,EAAKC,UAAL,EAAgBC,MAAhB,EAAwB;AAAA,SAMnCC,UANmC,GAMtB,MAAM;AACf,UAAIC,UAAU,GAAG,EAAjB;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,YAAY,CAACC,MAAjC,EAAyCF,CAAC,EAA1C,EAA8C;AAC1C,YAAIG,GAAG,GAAGF,YAAY,CAACE,GAAb,CAAiBH,CAAjB,CAAV;;AACA,YAAIG,GAAG,CAACC,MAAJ,CAAW,CAAX,KAAiB,GAArB,EAA0B;AACtB,cAAIC,EAAE,GAAG,IAAIZ,KAAJ,EAAT;AACAY,UAAAA,EAAE,CAACC,IAAH,CAAQC,IAAI,CAACC,KAAL,CAAWP,YAAY,CAACQ,OAAb,CAAqBN,GAArB,CAAX,CAAR;AACAJ,UAAAA,UAAU,CAACW,IAAX,CAAgBL,EAAhB;AACH;AACJ;;AAED,aAAON,UAAP;AACH,KAnBkC;;AAAA,SAqBnCY,QArBmC,GAqBxB,MAAM;AACb,UAAI,KAAKb,UAAL,GAAkBI,MAAlB,IAA4B,CAAhC,EAAmC;AAC/B,eAAO,CAAP;AACH,OAFD,MAEO;AACH,cAAMH,UAAU,GAAG,KAAKD,UAAL,EAAnB;AACA,YAAIc,GAAG,GAAG,CAAV;;AACA,aAAK,IAAIZ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,UAAU,CAACG,MAA/B,EAAuCF,CAAC,EAAxC,EAA4C;AACxC,cAAID,UAAU,CAACC,CAAD,CAAV,CAAcL,EAAd,GAAmBiB,GAAvB,EAA4B;AACxBA,YAAAA,GAAG,GAAGb,UAAU,CAACC,CAAD,CAAV,CAAcL,EAApB;AACH;AACJ;;AACDiB,QAAAA,GAAG,GAAGA,GAAG,GAAG,CAAZ;AACA,eAAOA,GAAP;AACH;AACJ,KAnCkC;;AAAA,SAqCnCN,IArCmC,GAqC3BO,GAAD,IAAS;AACZ,WAAKjB,SAAL,GAAiBiB,GAAG,CAACjB,SAArB;AACA,WAAKC,MAAL,GAAegB,GAAG,CAAChB,MAAL,GAAa,GAA3B;AACH,KAxCkC;;AAAA,SA0CnCiB,IA1CmC,GA0C5B,MAAM;AACT,UAAIX,GAAG,GAAG,IAAIY,MAAJ,CAAW,KAAKpB,EAAhB,CAAV;AACA,UAAIkB,GAAG,GAAGN,IAAI,CAACS,SAAL,CAAe,IAAf,CAAV;AACAf,MAAAA,YAAY,CAACgB,OAAb,CAAqBd,GAArB,EAA0BU,GAA1B;AACH,KA9CkC;;AAAA,SAgDnCK,oBAhDmC,GAgDXtB,SAAD,IAAe;AAC9B,UAAIG,UAAU,GAAG,KAAKD,UAAL,EAAjB;;AAEA,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,UAAU,CAACG,MAA/B,EAAuCF,CAAC,EAAxC,EAA4C;AACxC,YAAID,UAAU,CAACC,CAAD,CAAV,CAAcJ,SAAd,KAA4BA,SAAhC,EAA2C;AACvCG,UAAAA,UAAU,CAACoB,MAAX,CAAkBnB,CAAlB,EAAqB,CAArB;AACH;AACJ;;AAED,aAAOD,UAAP;AACP,KA1DkC;;AAC/B,SAAKJ,EAAL,GAAUA,EAAV;AACA,SAAKC,SAAL,GAAiBA,UAAjB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACH;;AALO;;AA8DZ,eAAeJ,KAAf","sourcesContent":["class Payin {\r\n    constructor(id, wallet_id, amount) {\r\n        this.id = id;\r\n        this.wallet_id = wallet_id;\r\n        this.amount = amount;\r\n    }\r\n\r\n    loadPayins = () => {\r\n        var listPayins = [];\r\n\r\n        for (let i = 0; i < localStorage.length; i++) {\r\n            var key = localStorage.key(i);\r\n            if (key.charAt(0) == 'i') {\r\n                var pi = new Payin();\r\n                pi.copy(JSON.parse(localStorage.getItem(key)));\r\n                listPayins.push(pi);\r\n            }\r\n        }\r\n\r\n        return listPayins;\r\n    }\r\n\r\n    getNewId = () => {\r\n        if (this.loadPayins().length == 0) {\r\n            return 1;\r\n        } else {\r\n            const listPayins = this.loadPayins();\r\n            var max = 0;\r\n            for (let i = 0; i < listPayins.length; i++) {\r\n                if (listPayins[i].id > max) {\r\n                    max = listPayins[i].id;\r\n                }\r\n            }\r\n            max = max + 1;\r\n            return max;\r\n        }\r\n    }\r\n\r\n    copy = (obj) => {\r\n        this.wallet_id = obj.wallet_id;\r\n        this.amount = (obj.amount)*100;\r\n    }\r\n\r\n    save = () => {\r\n        var key = 'i'.concat(this.id);\r\n        var obj = JSON.stringify(this);\r\n        localStorage.setItem(key, obj);\r\n    }\r\n\r\n    getPayinsByWallet_id = (wallet_id) => {\r\n            var listPayins = this.loadPayins();\r\n    \r\n            for (let i = 0; i < listPayins.length; i++) {\r\n                if (listPayins[i].wallet_id !== wallet_id) {\r\n                    listPayins.splice(i, 1);\r\n                }\r\n            }\r\n    \r\n            return listPayins;\r\n    }\r\n\r\n}\r\nexport default Payin;\r\n"]},"metadata":{},"sourceType":"module"}