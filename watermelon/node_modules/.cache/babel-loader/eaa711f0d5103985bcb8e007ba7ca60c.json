{"ast":null,"code":"class wallet {\n  constructor(_id, balance) {\n    this.saveWallet = () => {\n      //save the user in the localstorage\n      var key = 'w'.concat(this.id);\n      var obj = JSON.stringify(this);\n      localStorage.setItem(key, obj);\n    };\n\n    this.copy = obj => {\n      this.id = obj.id;\n      this.balance = obj.balance;\n    };\n\n    this.loadWallets = () => {\n      var listWallets = [];\n\n      for (let i = 0; i < localStorage.length; i++) {\n        var key = localStorage.key(i);\n\n        if (key.charAt(0) == 'w') {\n          var w = new Wallet();\n          w.copy(JSON.parse(localStorage.getItem(key)));\n          listWallets.push(w);\n        }\n      }\n\n      return listWallets;\n    };\n\n    this.exist = id => {\n      var key = 'w'.concat(id);\n\n      if (localStorage.getItem(key) == null) {\n        return false;\n      } else {\n        return true;\n      }\n    };\n\n    this.getBalanceById = id => {\n      var key = 'w'.concat(id);\n      var w = new Wallet();\n\n      if (w.exist(id)) {\n        w.copy(JSON.parse(localStorage.getItem(key)));\n        return w.balance;\n      } else null;\n    };\n\n    this.id = _id;\n    this.balance = balance;\n  }\n\n}\n\nexport default wallet;","map":{"version":3,"sources":["C:/Users/henin/Desktop/GitProjects/watermelon/watermelon/src/objects/wallet.js"],"names":["wallet","constructor","id","balance","saveWallet","key","concat","obj","JSON","stringify","localStorage","setItem","copy","loadWallets","listWallets","i","length","charAt","w","Wallet","parse","getItem","push","exist","getBalanceById"],"mappings":"AAAA,MAAMA,MAAN,CAAa;AACTC,EAAAA,WAAW,CAACC,GAAD,EAAKC,OAAL,EAAc;AAAA,SAKzBC,UALyB,GAKZ,MAAM;AACf;AACA,UAAIC,GAAG,GAAG,IAAIC,MAAJ,CAAW,KAAKJ,EAAhB,CAAV;AACA,UAAIK,GAAG,GAAGC,IAAI,CAACC,SAAL,CAAe,IAAf,CAAV;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqBN,GAArB,EAA0BE,GAA1B;AACH,KAVwB;;AAAA,SAYzBK,IAZyB,GAYjBL,GAAD,IAAS;AACZ,WAAKL,EAAL,GAAUK,GAAG,CAACL,EAAd;AACA,WAAKC,OAAL,GAAeI,GAAG,CAACJ,OAAnB;AACH,KAfwB;;AAAA,SAiBzBU,WAjByB,GAiBX,MAAM;AAChB,UAAIC,WAAW,GAAG,EAAlB;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,YAAY,CAACM,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC1C,YAAIV,GAAG,GAAGK,YAAY,CAACL,GAAb,CAAiBU,CAAjB,CAAV;;AACA,YAAIV,GAAG,CAACY,MAAJ,CAAW,CAAX,KAAiB,GAArB,EAA0B;AACtB,cAAIC,CAAC,GAAG,IAAIC,MAAJ,EAAR;AACAD,UAAAA,CAAC,CAACN,IAAF,CAAOJ,IAAI,CAACY,KAAL,CAAWV,YAAY,CAACW,OAAb,CAAqBhB,GAArB,CAAX,CAAP;AACAS,UAAAA,WAAW,CAACQ,IAAZ,CAAiBJ,CAAjB;AACH;AACJ;;AAED,aAAOJ,WAAP;AACH,KA9BwB;;AAAA,SAgCzBS,KAhCyB,GAgChBrB,EAAD,IAAQ;AACZ,UAAIG,GAAG,GAAG,IAAIC,MAAJ,CAAWJ,EAAX,CAAV;;AAEA,UAAGQ,YAAY,CAACW,OAAb,CAAqBhB,GAArB,KAA6B,IAAhC,EAAqC;AACjC,eAAO,KAAP;AACH,OAFD,MAEO;AACH,eAAO,IAAP;AACH;AACJ,KAxCwB;;AAAA,SA0CzBmB,cA1CyB,GA0CPtB,EAAD,IAAQ;AACrB,UAAIG,GAAG,GAAG,IAAIC,MAAJ,CAAWJ,EAAX,CAAV;AACA,UAAIgB,CAAC,GAAG,IAAIC,MAAJ,EAAR;;AAEA,UAAGD,CAAC,CAACK,KAAF,CAAQrB,EAAR,CAAH,EAAe;AACXgB,QAAAA,CAAC,CAACN,IAAF,CAAOJ,IAAI,CAACY,KAAL,CAAWV,YAAY,CAACW,OAAb,CAAqBhB,GAArB,CAAX,CAAP;AACA,eAAOa,CAAC,CAACf,OAAT;AACH,OAHD,MAGO;AACV,KAlDwB;;AACrB,SAAKD,EAAL,GAAUA,GAAV;AACA,SAAKC,OAAL,GAAeA,OAAf;AACH;;AAJQ;;AAsDb,eAAeH,MAAf","sourcesContent":["class wallet {\r\n    constructor(id, balance) {\r\n        this.id = id;\r\n        this.balance = balance;\r\n    }\r\n\r\n    saveWallet = () => {\r\n        //save the user in the localstorage\r\n        var key = 'w'.concat(this.id);\r\n        var obj = JSON.stringify(this);\r\n        localStorage.setItem(key, obj);\r\n    }\r\n\r\n    copy = (obj) => {\r\n        this.id = obj.id;\r\n        this.balance = obj.balance;\r\n    }\r\n\r\n    loadWallets = () => {\r\n        var listWallets = [];\r\n\r\n        for (let i = 0; i < localStorage.length; i++) {\r\n            var key = localStorage.key(i);\r\n            if (key.charAt(0) == 'w') {\r\n                var w = new Wallet();\r\n                w.copy(JSON.parse(localStorage.getItem(key)));\r\n                listWallets.push(w);\r\n            }\r\n        }\r\n\r\n        return listWallets;\r\n    }\r\n\r\n    exist = (id) => {\r\n        var key = 'w'.concat(id);\r\n        \r\n        if(localStorage.getItem(key) == null){\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    getBalanceById = (id) => {\r\n        var key = 'w'.concat(id);\r\n        var w = new Wallet();\r\n\r\n        if(w.exist(id)){\r\n            w.copy(JSON.parse(localStorage.getItem(key)));\r\n            return w.balance;\r\n        } else null;\r\n    }\r\n\r\n}\r\nexport default wallet;"]},"metadata":{},"sourceType":"module"}